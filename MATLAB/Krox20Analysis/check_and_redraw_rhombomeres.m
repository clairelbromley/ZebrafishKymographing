function data = check_and_redraw_rhombomeres(data, controls)
% if morphological markers are being used for rhombomere definition, check
% whether both left and right basal surfaces have been added - if so, a
% better approximation of the rhombomere area can replace the first
% approximation patch. 

    if (~strcmp(data.rh_definition_method, 'MorphologicalMarkers')) 
        return;
    end
    
    z = round((data.top_slice_index -  round(get(controls.hzsl, 'Value'))) * ...
        double(data.ome_meta.getPixelsPhysicalSizeZ(0).value(ome.units.UNITS.MICROM)));
    t = data.timepoint;
    vis = {'off', 'on'};
    vis = vis{get(controls.hshowchk, 'Value') + 1};

    if ~isempty(data.edges)
        ts = [data.edges.timepoint];
        zs = [data.edges.z];
        if any(ts == t)
            if any(zs(ts == t) == z)
                if (~isempty(data.edges((ts == t) & (zs == z)).L) && ...
                        ~isempty(data.edges((ts == t) & (zs == z)).R))
                    if (~isempty(data.edges((ts == t) & (zs == z)).Rh4Top) && ...
                            ~isempty(data.edges((ts == t) & (zs == z)).Rh4Bot))
                        %redraw rh4
                        data.edges((ts == t) & (zs == z)).Rh4 = ...
                            redraw_rhombomere(data, controls, 'Rh4');
                        data.edges((ts == t) & (zs == z)).hlRh4 = ...
                            patch(data.edges((ts == t) & (zs == z)).Rh4(:,1), ...
                            data.edges((ts == t) & (zs == z)).Rh4(:,2), ...
                            'c', ...
                            'EdgeColor', 'c', ...
                            'LineWidth', 2, ...
                            'FaceAlpha', 0.25, ...
                            'Visible', vis);
                    end
                    if (~isempty(data.edges((ts == t) & (zs == z)).Rh6Top) && ...
                            ~isempty(data.edges((ts == t) & (zs == z)).Rh6Bot))
                        %redraw rh6
                        data.edges((ts == t) & (zs == z)).Rh6 = ...
                            redraw_rhombomere(data, controls, 'Rh6');
                        data.edges((ts == t) & (zs == z)).hlRh4 = ...
                            patch(data.edges((ts == t) & (zs == z)).Rh6(:,1), ...
                            data.edges((ts == t) & (zs == z)).Rh6(:,2), ...
                            'm', ...
                            'EdgeColor', 'm', ...
                            'LineWidth', 2, ...
                            'FaceAlpha', 0.25, ...
                            'Visible', vis);
                    end
%                     setappdata(controls.hfig, 'data', data);
                end
            end
        end
    end
end